spring.application.name=product-service

# ==== Development Settings ====
spring.devtools.restart.enabled=false

# ==== Logging Configuration ====
logging.level.com.threedfly.productservice=INFO
logging.level.org.springframework.web=INFO
logging.level.org.springframework.boot=INFO
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n

# ==== Database Configuration ====
# Use H2 for local development and testing
spring.profiles.active=local

# ==== Local Profile (H2 Database) ====
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console

# ==== Production Profile (MySQL) ====
# These will be overridden by environment variables in production
spring.datasource.url=jdbc:h2:mem:productdb
spring.datasource.username=sa
spring.datasource.password=
spring.datasource.driver-class-name=org.h2.Driver

# ==== JPA / Hibernate ====
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.defer-datasource-initialization=true
spring.sql.init.mode=always

# ==== Connection Pool Settings ====
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.leak-detection-threshold=60000
spring.datasource.hikari.validation-timeout=5000

# ==== Actuator for Health Checks ====
management.endpoints.web.exposure.include=health,info
management.endpoint.health.show-details=always

# ==== Server Configuration ====
server.port=8081

# ==== Product Service Configuration ====
product.default.currency=USD
product.stock.warning.threshold=10
product.sku.prefix=PRD

# ==== Category Configuration ====
category.slug.max.length=100

# ==== File Upload Configuration ====
app.upload.dir=uploads
spring.servlet.multipart.max-file-size=50MB
spring.servlet.multipart.max-request-size=50MB
spring.servlet.multipart.enabled=true

# ==== Database File Storage Configuration ====
# Handle large objects (images and STL files) in database
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.jpa.properties.hibernate.connection.characterEncoding=utf8
spring.jpa.properties.hibernate.connection.useUnicode=true

# ==== Supplier Configuration ====
supplier.verification.required=true
supplier.rating.max=5.0
supplier.rating.min=0.0

# ==== Image Storage Configuration ====
product.image.upload.path=/tmp/product-images
product.image.max.size=5MB
product.image.allowed.types=jpg,jpeg,png,gif

# ==== 3D Printing Configuration ====
product.3d.stl.upload.path=/tmp/stl-files
product.3d.stl.max.size=50MB
product.3d.stl.allowed.types=stl

# ==== Search Configuration ====
product.search.max.results=100
product.search.min.keyword.length=2

# ==== Validation Configuration ====
spring.validation.group.order=CREATE,UPDATE

# ==== Geocoding Configuration ====
geocoding.enabled=true
geocoding.timeout=5000 

# ==== Ngrok Auto-Start Configuration ====
# Enable automatic ngrok startup when application starts (works with IntelliJ, command line, etc.)
ngrok.auto-start.enabled=true
# Port to tunnel (defaults to server.port)
ngrok.port=${server.port:8081}
# Timeout in seconds to wait for ngrok to be ready
ngrok.timeout=30 

# ==== Shopify Configuration ====
shopify.apiKey=${SHOPIFY_API_KEY:xxx}
shopify.apiSecret=${SHOPIFY_API_SECRET:xxx}
shopify.redirectUri=http://localhost:8081/oauth/callback
shopify.apiVersion=2025-07
shopify.scopes=read_products,write_products,read_inventory,write_inventory,write_files,read_publications,write_publications